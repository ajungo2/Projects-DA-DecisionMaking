"0",""
"0","################check outputs################################"
"0","print(mod_nn_fitbalance)"
"1","Neural Network"
"1"," "
"1","

"
"1","750"
"1",""
"1"," samples"
"1","
"
"1"," 14"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","  2"
"1"," "
"1","classes:"
"1"," "
"1","'0', '1'"
"1"," "
"1","
"
"1","
"
"1","No pre-processing
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold, repeated 5 times)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","675, 675, 675, 675, 676, 675, ..."
"1"," "
"1","
"
"1","Addtional sampling using "
"1","down-sampling"
"1","

"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  size"
"1","  decay"
"1","  ROC"
"1","  Sens "
"1","  Spec "
"1","
"
"1","  1   "
"1","  0e+00"
"1","  NaN"
"1","  0.668"
"1","  0.666"
"1","
"
"1","  1   "
"1","  1e-04"
"1","  NaN"
"1","  0.666"
"1","  0.693"
"1","
"
"1","  1   "
"1","  1e-01"
"1","  NaN"
"1","  0.714"
"1","  0.682"
"1","
"
"1","  3   "
"1","  0e+00"
"1","  NaN"
"1","  0.624"
"1","  0.698"
"1","
"
"1","  3   "
"1","  1e-04"
"1","  NaN"
"1","  0.641"
"1","  0.670"
"1","
"
"1","  3   "
"1","  1e-01"
"1","  NaN"
"1","  0.677"
"1","  0.673"
"1","
"
"1","  5   "
"1","  0e+00"
"1","  NaN"
"1","  0.655"
"1","  0.676"
"1","
"
"1","  5   "
"1","  1e-04"
"1","  NaN"
"1","  0.650"
"1","  0.654"
"1","
"
"1","  5   "
"1","  1e-01"
"1","  NaN"
"1","  0.681"
"1","  0.658"
"1","
"
"1","
"
"1","Sens was used to select the optimal model using the largest value.
"
"1","The final values used for the model were size = 1 and decay = 0.1."
"1","
"
