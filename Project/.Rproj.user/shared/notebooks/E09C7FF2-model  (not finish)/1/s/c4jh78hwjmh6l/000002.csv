"0","print(mod_nn_fit)
"
"1","Neural Network"
"1"," "
"1","

"
"1","750"
"1",""
"1"," samples"
"1","
"
"1"," 14"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","  2"
"1"," "
"1","classes:"
"1"," "
"1","'0', '1'"
"1"," "
"1","
"
"1","
"
"1","No pre-processing
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold, repeated 5 times)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","675, 676, 675, 674, 674, 675, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  size"
"1","  decay"
"1","  Accuracy"
"1","  Kappa"
"1","
"
"1","  1   "
"1","  0e+00"
"1","  0.705   "
"1","  0.331"
"1","
"
"1","  1   "
"1","  1e-04"
"1","  0.709   "
"1","  0.337"
"1","
"
"1","  1   "
"1","  1e-01"
"1","  0.751   "
"1","  0.383"
"1","
"
"1","  3   "
"1","  0e+00"
"1","  0.700   "
"1","  0.290"
"1","
"
"1","  3   "
"1","  1e-04"
"1","  0.710   "
"1","  0.292"
"1","
"
"1","  3   "
"1","  1e-01"
"1","  0.725   "
"1","  0.330"
"1","
"
"1","  5   "
"1","  0e+00"
"1","  0.697   "
"1","  0.277"
"1","
"
"1","  5   "
"1","  1e-04"
"1","  0.705   "
"1","  0.293"
"1","
"
"1","  5   "
"1","  1e-01"
"1","  0.707   "
"1","  0.291"
"1","
"
"1","
"
"1","Accuracy was used to select the optimal model using the largest value.
"
"1","The final values used for the model were size = 1 and decay = 0.1."
"1","
"
